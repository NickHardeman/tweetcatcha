/*Object to store and parse all the tweets*/package com.tweetcatcha.data.objects {		import flash.events.*;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;		import com.tweetcatcha.events.TweetIDEvent;		public class Tweets extends EventDispatcher {				private var feed:XML;		private var ID:int;		//private var url:String;		private var tweetsXML:XML;				public var tweets:Array = [];				private var idIncrement:int;				//constructor		public function Tweets(ID:int, tweetsXML:XML) {			//this.feed = feed;			this.ID = ID;			this.tweetsXML = tweetsXML;		}				//load		public function load():void {			parseXML();		}				//parse the XML received		public function parseXML():void {			//trace("Tweets :: parseXML : "+ tweetsXML.entry.length());			//trace("Tweets :: parseXML : total tweets = "+feed.totalresults);			var allTweets:XMLList = tweetsXML.entry;			//trace("Number of tweets= " + allTweets.length());			//for each (var feedXML:XML in feed) {			for (var i:uint = 0; i < allTweets.length(); i++) {				var _tweetId = allTweets[i].tweet_id;				var _userId = allTweets[i].tweet_from_user_id;				var _user = allTweets[i].tweet_from_user;				var _profileImage = allTweets[i].tweet_profile_image_url;				var _createdTime = allTweets[i].tweet_created_at;				var _tweetText = allTweets[i].tweet_text;								//create tweet object				var tweet:Tweet = new Tweet(											_tweetId,											_userId,											_user,											_profileImage,											_createdTime,											_tweetText,											ID,											idIncrement											);				//push tweet into tweets				tweets[tweet.ID] = tweet;				//trace(tweets[tweet.ID].ID + " " + tweet.user);				//increment the id				idIncrement++;			}						dispatchEvent( new TweetIDEvent(TweetIDEvent.TWEETID, ID) );					}				//get the tweets		public function get getTweets():Array {			return tweets;		}					}}