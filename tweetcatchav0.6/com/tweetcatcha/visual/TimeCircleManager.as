package com.tweetcatcha.visual {		import flash.display.MovieClip;		import flash.events.EventDispatcher;		import com.reintroducing.events.CustomEvent;	import com.tweetcatcha.data.Constants;		public class TimeCircleManager extends EventDispatcher {		// the holda clip inside the circle nav //		private var _mc			:MovieClip;		private var _tCircles	:Vector.<TimeCircle>;		// this is the min rad that it can be, most likely the rad of the center nav //		private var _minRadius	:Number;		private var _sw			:Number;		private var _sh			:Number;				private var _wInc		:Number;				public function setup():void {			_tCircles = new Vector.<TimeCircle>(24, true);						for (var i :int = 0; i < 24; i++) {				var tc:TimeCircle = new TimeCircle();								_mc.addChild(tc);				_tCircles[i] = tc;			}			_configureCircles();		}				public function animateIn():void {					}				public function onStageResize($w:Number, $h:Number):void {			trace("TimeCircleManager :: onStageResize : ");			_sw = $w;			_sh = $h;			if (_tCircles != null) _configureCircles();		}				private function _configureCircles():void {			_wInc = ( (_sw * .5) - (_minRadius) ) / 22;			//_posInc = _w /2; 			for (var i :int = 1; i <= 24; i++) {				var tc:TimeCircle = _tCircles[i-1];				tc.width = tc.height = (_wInc * 2) * i + (_minRadius * 2 + 70);				//tc.alpha = 1 - ((i / 25) + (1/25));				tc.fill_mc.alpha = i * .004;				//trace("TimeCircleManager :: _configureCircles : tc.width = "+((_sw * .5) - _minRadius) );				//tc.width = 300 * i;			}					}				public function getRadiusForTime($hour:int, $min:int):Number {			return _wInc * $hour + (_minRadius + 35);		}						public function set minRadius($r:Number):void {			_minRadius = $r;		}				public function set mc($mc:MovieClip):void {			_mc = $mc;		}	}	}