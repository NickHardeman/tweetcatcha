/*Object to store and parse all the tweets*/package com.tweetcatcha.data.objects {		import flash.display.MovieClip;	import flash.events.*;		import com.tweetcatcha.events.TweetIDEvent;		public class Tweets extends MovieClip {				private var feed:XML;		private var ID:int;		private var url:String;				private var tweets:Array = [];				private var idIncrement:int;				//constructor		public function Tweets(feed:XML, ID:int, url:String) {			this.feed = feed;			this.ID = ID;			this.url = url;			//trace("ID" + ": " + ID);			parseXML();		}				//parse the XML received		public function parseXML():void {			//trace(feed.totalresults);			var allTweets:XMLList = feed.tweets;			//trace("Number of tweets= " + allTweets.children().length());			//for each (var feedXML:XML in feed) {			for (var i:uint = 0; i < allTweets.children().length(); i++) {				var _tweetId = allTweets.entry[i].tweet_id;				var _userId = allTweets.entry[i].tweet_from_user_id;				var _user = allTweets.entry[i].tweet_from_user;				var _profileImage = allTweets.entry[i].tweet_profile_image_url;				var _createdTime = allTweets.entry[i].tweet_created_at;				var _tweetText = allTweets.entry[i].tweet_text;								//create tweet object				var tweet:Tweet = new Tweet(											_tweetId,											_userId,											_user,											_profileImage,											_createdTime,											_tweetText,											ID,											idIncrement											);				//push tweet into tweets				tweets[tweet.ID] = tweet;				//trace(tweets[tweet.ID].ID + " " + tweet.user);				dispatchEvent( new TweetIDEvent(TweetIDEvent.TWEETID, tweets[tweet.ID]) );				//increment the id				idIncrement++;			}		}				//get the tweets		public function get getTweets():Array {			return tweets;		}					}}