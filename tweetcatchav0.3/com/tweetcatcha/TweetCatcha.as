package com.tweetcatcha {		import flash.display.MovieClip;	import flash.events.*;		import com.tweetcatcha.data.Data;	import com.tweetcatcha.data.Constants;	import com.tweetcatcha.nav.MainNav;	import com.tweetcatcha.visual.Dreamweaver;		import com.tweetcatcha.events.TweetIDEvent;	import com.reintroducing.events.CustomEvent;		public class TweetCatcha extends MovieClip {				//object to load all the data		private var theData:Data;		private var DW				:Dreamweaver;		private var MN				:MainNav = new MainNav();		//object to hold all news items		private var newsItems:Array = [];		//object to hold all tweets		private var tweets:Array = [];				//constructor		public function TweetCatcha() {			stage.align = "TL";			stage.scaleMode	= "noScale";			//get it up and running			theData = new Data();			DW = new Dreamweaver();			DW.mc = dreamweaver_mc;			MN.mc = mainMenuHolda_mc;			theData.loadData();			theData.addEventListener(Data.NEWS_ITEMS_LOADED, getNewsItems, false, 0, true);			theData.addEventListener(Data.TWEETS_LOADED, getTweets, false, 0, true);			theData.addEventListener(TweetIDEvent.TWEETID, _onTweetsLoadedForId, false, 0, true);						stage.addEventListener(Event.RESIZE, _onStageResize);		}				//get the news items once the data is loaded		public function getNewsItems($e:Event):void {			theData.removeEventListener(Data.NEWS_ITEMS_LOADED, getNewsItems);			//get the news items			newsItems = theData.getNewsItems;			trace("the getNewsItems function is running " +newsItems.length);						for (var i:uint = 0; i < newsItems.length; i++) {				//trace("Main :: getNewsItems : "+newsItems[i].ID + ": " + newsItems[i].headline);			}						Constants.createSections(newsItems);			for (i = 0; i < Constants.sections.length; i++) {				//trace("Main :: getNewsItems : section " +Constants.sections[i]);			}						DW.onStageResize(stage.stageWidth, stage.stageHeight);			DW.setData(theData);			DW.setup();						DW.addEventListener(Constants.HEADLINE_ID_SELECTED, _onHeadlineSelected, false, 0, true);						//_onHeadlineClick(5);						MN.setup(newsItems);			MN.onStageResize(stage.stageWidth, stage.stageHeight);			MN.addEventListener(Constants.HEADLINE_ID_SELECTED, _onHeadlineSelected, false, 0, true);						stage.addEventListener(MouseEvent.MOUSE_MOVE, _onMouseMove, false, 0, true);			MN.animateOut();					}				public function _onTweetsLoadedForId($e:TweetIDEvent):void {			//DW.onTweetsLoaded($e.getID);		}				//get tweets		public function getTweets($e:Event):void {			//get the tweets			//tweets = theData.getTweets;			trace("\n\n\nMain :: getTweets : ---------------------------\n");			for (var j:int = 0; j < newsItems.length; j++) {				 trace(newsItems[j].ID+": "+newsItems[j].headline+" (totalTweets = "+newsItems[j].tweets.length+")");				for (var i:uint = 0; i < newsItems[j].tweets.length; i++) {					//get the stuff inside there					//trace("      - "+newsItems[j].tweets[i].user)// +" : \""+newsItems[j].tweets[i].tweetText+"\"");				}			}					}			public function _onHeadlineSelected($e:CustomEvent = null):void {			_onHeadlineClick( $e.params.ID );		}				public function _onHeadlineClick( $id:int ):void {			DW.headlineSelected( $id );		}				private function _onStageResize( $e:Event ):void {			DW.onStageResize($e.target.stageWidth, $e.target.stageHeight);			MN.onStageResize($e.target.stageWidth, $e.target.stageHeight);		}				private function _onMouseMove($e:MouseEvent):void {			MN.checkMouse( mouseY );		}					}}