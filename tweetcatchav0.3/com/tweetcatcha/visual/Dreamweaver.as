package com.tweetcatcha.visual {		import flash.events.EventDispatcher;	import flash.events.Event;	import flash.events.MouseEvent;		import flash.display.MovieClip;		import com.tweetcatcha.data.Data;	import com.tweetcatcha.data.objects.NewsItem;		import com.NickHardeman.utils.MathUtils;		import com.caurina.transitions.*;		public class Dreamweaver extends EventDispatcher {		private var _data			:Data;		private var _newsItems		:Array;		// this movieclip is already on the stage, we just need to pass a ref //		private var _mc				:MovieClip;		private var _circleClip		:MovieClip;		// the width of the black circle, so we know where to place buttons //		private var _radius			:Number = 370 * .5;		private var _angleInc		:Number;		private var _headlineBtns	:Vector.<CircleHeadlineBtn>;				private var _activeHeadlineID	:int = -1;		private var _prevHeadlineID		:int = -1;				public function setData( $d:Data ):void {			_data = $d;		}				public function set mc( $mc:MovieClip ):void {			_mc = $mc;			_circleClip = MovieClip(MovieClip(_mc.getChildByName("circleClip")));		}				public function get activeID():int {			return _activeHeadlineID;		}				public function setup():void {			_newsItems = _data.getNewsItems;			_headlineBtns = new Vector.<CircleHeadlineBtn>();			_angleInc = 360/_newsItems.length;			for (var i:int = 0; i < _newsItems.length; i++) {				var ni:NewsItem = _newsItems[i] as NewsItem;				// located in the library, under center circle pieces folder				var hb:CircleHeadlineBtn = new CircleHeadlineBtn();								var angle:Number = _angleInc * i;				hb.rotation = angle;				hb.alpha = 1 - (i / 360);				hb.baseAngle = angle;				angle = MathUtils.toRadians( angle );				hb.x = Math.cos( angle ) * _radius;				hb.y = Math.sin( angle ) * _radius;								hb.ID = ni.ID;								hb.rec.height = 3;				hb.tMask.width = 0;								hb.buttonMode = true;				hb.mouseChildren = false;								hb.addEventListener(MouseEvent.ROLL_OVER, _onHeadlineBtnOver, false, 0, true);				hb.addEventListener(MouseEvent.ROLL_OUT, _onHeadlineBtnOut, false, 0, true);				hb.addEventListener(MouseEvent.CLICK, _onHeadlineBtnClick, false, 0, true);								// this is located in the movieclip on the timeline, behind the black circle //				MovieClip(_circleClip.getChildByName("headlineBtnHolda")).addChild( hb );				_headlineBtns.push( hb ); 								//trace("Dreamweaver :: setup : headline = "+hb.alpha);			}			trace("Dreamweaver :: setup : _totalHeadline btns = "+_headlineBtns.length);		}				public function headlineSelected( $id:Number ):void {			var ni:NewsItem = _newsItems[$id];			var cc:MovieClip = MovieClip(_circleClip.getChildByName("circleContent_mc"));			cc.title_txt.text = ni.headline;			_activeHeadlineID = $id;						_disableHeadlineBtn( _headlineBtns[$id] );			_shiftHeadlineBtns( _headlineBtns[$id] );			_headlineBtnOver( _headlineBtns[$id] );						cc.title_txt.y = -100;			//cc.alpha = .3;						Tweener.addTween(cc.title_txt, {y:-53, time:.3, transition:"easeOutCubic"});						_prevHeadlineID = _activeHeadlineID;		}				private function _onHeadlineBtnOver($e:MouseEvent):void {			var hb:CircleHeadlineBtn = $e.currentTarget as CircleHeadlineBtn;			_headlineBtnOver( hb );			_shiftHeadlineBtns( hb );		}				private function _headlineBtnOver($t:CircleHeadlineBtn):void {			if (_activeHeadlineID > -1) { _headlineBtnOut(_headlineBtns[_activeHeadlineID]); }			Tweener.addTween($t.rec, {height:21, time:.3, transition:"easeOutCirc"});			Tweener.addTween($t.tMask, {width:$t.rec.width, time:.5, transition:"easeInOutCirc"});		}				private function _onHeadlineBtnOut($e:MouseEvent):void {			_headlineBtnOut( $e.currentTarget as CircleHeadlineBtn );						if (_activeHeadlineID > -1) {				_shiftHeadlineBtns( _headlineBtns[_activeHeadlineID] );				_headlineBtnOver( _headlineBtns[_activeHeadlineID] );			}		}				private function _headlineBtnOut($t:CircleHeadlineBtn):void {			Tweener.addTween($t.rec, {height:3, time:.3, transition:"easeOutCirc"});			Tweener.addTween($t.tMask, {width:0, time:.2, transition:"easeOutCirc"});		}				private function _onHeadlineBtnClick($e:MouseEvent):void {			_activeHeadlineID = $e.currentTarget.ID;			dispatchEvent( $e );		}				private function _disableHeadlineBtn($t:CircleHeadlineBtn):void {			$t.removeEventListener(MouseEvent.ROLL_OUT, _onHeadlineBtnOut);			$t.buttonMode = false;			$t.mouseEnabled = false;		}				// onRollOver to move other btns out of the way //		private function _shiftHeadlineBtns($target:CircleHeadlineBtn = null):void {			var tarX:Number;			var tarY:Number;			for (var i:int = 0; i < _headlineBtns.length; i++) {				var hb:CircleHeadlineBtn = _headlineBtns[i] as CircleHeadlineBtn;				if ($target != null) {										if (i > $target.ID) {						_headlineBtns[i].tarAngle = _headlineBtns[i].baseAngle + (_angleInc * 3);					} else if (i < $target.ID) {						_headlineBtns[i].tarAngle = _headlineBtns[i].baseAngle - (_angleInc * 3);					} else if (i == $target.ID) {						_headlineBtns[i].tarAngle = _headlineBtns[i].baseAngle;					}									} else {					_headlineBtns[i].tarAngle = _headlineBtns[i].baseAngle;				}				var angle:Number = MathUtils.toRadians( _headlineBtns[i].tarAngle );				tarX = Math.cos( angle ) * _radius;				tarY = Math.sin( angle ) * _radius;				if (hb.x != tarX) {					Tweener.addTween(hb, {x:tarX, y:tarY, time:.3, transition:"easeOutCirc"});				}			}					}											}}