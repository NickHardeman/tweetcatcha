package com.tweetcatcha.visual {	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.Shape;	import flash.geom.Rectangle;	import flash.geom.Matrix;	import flash.events.MouseEvent;		import com.gskinner.utils.Rndm;		import com.tweetcatcha.data.objects.Tweet;		import com.caurina.transitions.*;		public class TweetManager {				private var _mc			:MovieClip;		public var _tweets		:Vector.<Vector.<TinyCircle> >		private var point		:Point;		private var xPos		:Number = 10;		private var yPos		:Number = 0;		private var line		:Bitmap;		private var lineBmd		:BitmapData;		private var stageWidth	:int;		private var stageHeight	:int;		private var shape		:Shape = new Shape();				private var canvasBmp	:Bitmap;		private var canvasBmd	:BitmapData;				Rndm.seed = 10;				public function setup( ):void {						stageWidth = _mc.parent.stage.stageWidth;			stageHeight = _mc.parent.stage.stageHeight;			canvasBmd = new BitmapData(stageWidth, stageHeight, true, 0x00000000);			canvasBmp = new Bitmap( canvasBmd );			canvasBmp.x = stageWidth * -.5;			canvasBmp.y = stageHeight * -.5;			_mc.addChild( canvasBmp );		}				public function setTotalNewsItems($i:int):void {			_tweets = new Vector.<Vector.<TinyCircle> >($i, true);			for (var i:int = 0; i < $i; i++) {				_tweets[i] = new Vector.<TinyCircle>();			}					}				// call before calling addTweet to speed up drawing to canvas,		// do not forget to call unlock //		public function lock():void {			canvasBmd.lock();		}		public function unlock():void {			canvasBmd.unlock();		}				public function addTweet($tarX:Number, $tarY:Number, $t:Tweet, $parentIndex:int, $index:int):void {			//var tc:TweetClip = new TweetClip();			var tc:TinyCircle = new TinyCircle();			tc.x = $tarX;			tc.y = $tarY;			tc.tweet = $t;			tc.cacheAsBitmap = true;			tc.addEventListener(MouseEvent.MOUSE_OVER, _onMouseOver);			tc.addEventListener(MouseEvent.MOUSE_OUT, _onMouseOut);			tc.parentIndex = $parentIndex;			tc.index = $index;			_tweets[$parentIndex].push(tc);			_mc.addChild(tc);		}				public function showTweets($parentIndex:int):void {			for ( var i:int = 0; i < _tweets.length; i++) {				//trace("TweetManager :: setTotalNewsItems : _tweets = "+_tweets.length+" _tweets[i] = "+_tweets[i].length);				for (var j:int = 0; j < _tweets[i].length; j++) {					var tc:TinyCircle = _tweets[i][j] as TinyCircle;					if (i == $parentIndex) {						tc.visible = true;						//tc.gotoAndPlay("largeBtnOut");					} else {						tc.visible = false;					}				}			}		}				public function onHeadlineClick($parentIndex:int):void {			for ( var i:int = 0; i < _tweets.length; i++) {				for (var j:int = 0; j < _tweets[i].length; j++) {					var tc:TinyCircle = _tweets[i][j];					if (i == $parentIndex) {						tc.gotoAndStop(10);					} else {						tc.gotoAndStop(1);					}				}			}		}				//tweet mouseover		public function _onMouseOver(event:MouseEvent):void {			//trace(event.target.tweet.tweetText);			//populate tinyclip tweet text			var sb:SpeechBubble = new SpeechBubble();			sb.x = _mc.mouseX;			sb.y = _mc.mouseY;			sb.rollOverText.text = event.target.tweet.tweetText;			sb.name = "" + event.target.tweet.ID + "";			event.target.parent.addChild(sb);			//animate in tinyclip rollover			event.target.gotoAndPlay("smallBtnOver");		}				//tweet mouseout		public function _onMouseOut(event:MouseEvent):void {			//animate out tinyclip rollout			event.target.gotoAndPlay("smallBtnOut");			event.target.parent.removeChild(event.target.parent.getChildByName("" + event.target.tweet.ID + ""));		}				public function drawTweet(tc:TweetClip):void {			canvasBmd.setPixel32(tc.x + (stageWidth * .5), tc.y + (stageHeight * .5), 0xffff0000);			//canvasBmd.draw(tc, new Matrix(1,0,0,1, tc.x + (stageWidth * .5), tc.y + (stageHeight * .5)), null, 'add' );			//canvasBmd.draw( tc );						//var lineBmd = new BitmapData(stageWidth, stageHeight, true, 0x00FFFFFF);			/*for ( var i:int = 0; i < tc.x; i++) {				var point = new Point(i, 50 + tc.y);				lineBmd.setPixel32(point.x, point.y, 0xFFFFFFFF);			}*/						/*shape.graphics.lineStyle(1, 0xFFFFFF, 0.3);			shape.graphics.moveTo(200 , 100);			shape.graphics.curveTo(Rndm.integer(100, 200), Rndm.integer(-50, 200), tc.x, 100 + tc.y);						lineBmd.draw(shape);			shape.graphics.clear();						line = new Bitmap(lineBmd);			line.y = -100;			//line.alpha = .3;			_mc.addChild(line);			*/					}				public function set mc($mc:MovieClip):void {			_mc = $mc;		}	}}