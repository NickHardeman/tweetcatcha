package com.tweetcatcha.nav {	import flash.display.MovieClip;		import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	import com.reintroducing.events.CustomEvent;		import com.tweetcatcha.data.Constants;		import flash.net.URLLoader;	import flash.net.URLRequest;		import com.caurina.transitions.*;		import fl.data.DataProvider;	import fl.controls.DataGrid;	import com.tweetcatcha.visual.IconCellRenderer;		// extends movieclip in tweetcatcha.fla library //	public class DateSelectionNavigation extends MovieClip {				private var _SCRIPT_LOC		:String = "http://127.0.0.1/Tweetcatcha/getData/";		private var _FILE_NAME		:String = "getAvailableDates.php";		private var _loader			:URLLoader;		private var _bLoaded		:Boolean = false;				private var _xml			:XML;				private var dg				:DataGrid;				public function DateSelectionNavigation( ):void {			this.visible = false;			this.alpha = 0;			this.blankBtn.useHandCursor = false;			closeBtn.buttonMode = true;			closeBtn.addEventListener(MouseEvent.MOUSE_DOWN, _onCloseBtn);		}				public function setup($sLoc:String = ""):void {			if ($sLoc != "") _SCRIPT_LOC = $sLoc;		}		public function load():void {			trace("DateSelectionNavigation :: load : _xml is loading");			_bLoaded = true;			_loader = new URLLoader();			_loader.addEventListener(Event.COMPLETE, _onDatesLoaded, false, 0, true);			_loader.load( new URLRequest(_SCRIPT_LOC+_FILE_NAME ));		}				private function _onDatesLoaded($e:Event):void {			_loader.removeEventListener(Event.COMPLETE, _onDatesLoaded);			_xml = new XML(_loader.data);			_loader = null;			createDataGrid();			dispatchEvent($e);		}				private function createDataGrid():void {			dg = new DataGrid();            dg.move(0, 20);            dg.width = 1000            dg.rowCount = 24;            dg.columns = ["Serial", "Date", "Total Headlines", "Total Tweets"];			dg.editable = false;			dg.resizableColumns = false;			dg.getColumnAt(3).cellRenderer = IconCellRenderer;						for (var i:uint = 0; i < _xml.date.length(); i++) {				if (_xml.date[i].@totalTweets > 400) {					var item:Object = {	Serial:i,										Date:_xml.date[i].@date, 										TotalHeadlines:_xml.date[i].@totalNewsItems,										TotalTweets:_xml.date[i].@totalTweets										};					dg.addItem(item);				}			}			            dg.addEventListener(Event.CHANGE, gridItemSelected, false, 0, true);			//adjust column widths			dg.columns[0].width = 0;			dg.columns[1].width = 150;			dg.columns[2].width = 500;			dg.rowHeight = 50;			//dg.setStyle("cellRenderer", GridCellRenderer);			//dg.setStyle("headerRenderer", GridHeaderRenderer);            			addChild(dg);			openDSN();        }				 public function gridItemSelected($e:Event):void {			trace("DateSelectionNavigation :: gridItemSelected : Selected item = " + $e.target.selectedItem.Serial);							dispatchEvent( new CustomEvent(Constants.DATE_SELECTED, {ID:$e.target.selectedItem.Serial, date:$e.target.selectedItem.Date}) );			closeDSN();        }				public function openDSN():void {			if (!_bLoaded) load();			this.visible = true;			Tweener.addTween(this, {alpha:1, time:0.2, transition:"linear"});		}				public function closeDSN():void {			Tweener.addTween(this, {alpha:0, time:0.2, transition:"linear", onComplete:function(){this.visible = false;} });		}				//close button		public function _onCloseBtn(Event:MouseEvent):void {			closeDSN();		}	}}