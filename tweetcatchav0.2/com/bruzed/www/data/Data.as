package com.bruzed.www.data {		import flash.display.Sprite;	import flash.events.*;	import flash.net.URLLoader;	import flash.net.URLRequest;		import com.bruzed.www.times.Newswire;		public class Data extends Sprite {				//instance for newswire		private var newswire		:Newswire;		//newswire key		private const NEWSWIRE_KEY	:String = "cc79503c84c6fc36e8e6fd848827a201:17:59190453";		//arrays to store data		private var _headlines		:Array = new Array();		private var _urls			:Array = new Array();		private var _sections		:Array = new Array();		private var _summary		:Array = new Array();		private var _updatedTime	:Array = new Array();		private var _createdTime	:Array = new Array();		private var _pubDate		:Array = new Array();				//backtype stuff		private var BACKTYPE_KEY	:String = "93cf9404dc4d8aebe92f";		/*private var _totalResults	:Array = new Array();		private var _startIndex		:int = 1;		private var _itemsPerPage	:int = 25;		private var _tweetId		:Array = new Array();		private var _tweetFromUserId:Array = new Array();		private var _tweetFromUser	:Array = new Array();		private var _profileImage	:Array = new Array();		private var _tweetTime		:Array = new Array();		private var _tweetText		:Array = new Array();		private var _tweets			:Array = [_tweetId, _tweetFromUserId, _tweetFromUser, _profileImage, _tweetTime, _tweetText, _tweets];*/				private var _tweets			:Array = new Array();				//constructor		public function Data() {			trace("this is an instance of the data");			newswire = new Newswire(NEWSWIRE_KEY);			newswire.addEventListener(Newswire.LOADED, _constructQueries, false, 0, true);			newswire.load();		}				//construct the query		public function _constructQueries($e:Event):void {			_headlines = newswire.getHeadlines;			_urls = newswire.getUrls;			_sections = newswire.getSections;			_summary = newswire.getSummary;			_updatedTime = newswire.getUpdatedTime;			_createdTime = newswire.getCreatedTime;			_pubDate = newswire.getPubDate;			newswire.removeEventListener(Newswire.LOADED, _constructQueries);			_searchHeadline();		}				//do the backtweet		private function _searchHeadline():void {			for (var i:uint = 0; i < _urls.length; i++) {				var _loader:URLLoader = new URLLoader();				_loader.addEventListener(Event.COMPLETE, _onBackTypeLoaded, false, 0, true);				_loader.load( new URLRequest( "http://backtweets.com/search.xml?q="+ _urls[i] +"&key="+ BACKTYPE_KEY ) );			}		}				private function _onBackTypeLoaded($e:Event):void {			$e.target.removeEventListener(Event.COMPLETE, _onBackTypeLoaded);			//trace("These are the results : "+XML($e.target.data).toXMLString());			//trace("These are the results : "+XML($e.target.data).tweets);			//_displayNumResults(XML($e.target.data).totalresults);						var tweetsList:XMLList = XML($e.target.data).tweets;			for each (var tweetsXML:XML in tweetsList) {                _tweets.push(tweetsXML);            }					}	}}