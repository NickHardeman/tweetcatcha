package com.bruzed.www.times {		import flash.display.MovieClip;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.IOErrorEvent;		import com.adobe.serialization.json.JSON;		public class ArticleSearch extends MovieClip {		public static const LOADED:String = "jsonIsLoaded";				//variables for the xml		private var _offsetAmount:Number = 10;		private var url:String;		private var loader:URLLoader = new URLLoader();		private var request:URLRequest = new URLRequest();		private var _headlines:Array = new Array();		private const KEYWORD:String = "";		private var APIKEY:String;								//constructor		public function ArticleSearch(APIKEY:String) {			this.APIKEY = APIKEY;		}				public function load():void {			request.url = "http://api.nytimes.com/svc/search/v1/article?query=" + KEYWORD + "&api-key=" + APIKEY + "&begin_date=20080110&end_date=20081022"; 			loader.load(request);			loader.addEventListener(Event.COMPLETE, decodeJSON);			//loader.addEventListener(IOErrorEvent.IO_ERROR, onIOErrorEvent, false, 0, true);		}				//xml loaded		public function decodeJSON(event:Event):void {			var jsonData:Object = JSON.decode(event.target.data);			//trace(event.target.data);			for (var i:uint = 0; i < jsonData.results.length; i++) {				//trace(jsonData.results[i].title);				_headlines.push(jsonData.results[i].title);				trace(_headlines);			}			loader.addEventListener(Event.COMPLETE, decodeJSON);			dispatchEvent(new Event(LOADED));		}				//on IO error		/*public function _onIOErrorEvent($e:IOErrorEvent):void {			decodeJson();			$e.target.removeEventListener(Event.COMPLETE, _onIOErrorEvent);		}*/				//getter		public function get getHeadlines():Array {			return _headlines;		}			}}