package com.bruzed.www.times {		import flash.display.MovieClip;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.display.MovieClip;	import flash.events.IOErrorEvent;		public class Newswire extends MovieClip {		public static const LOADED	:String = "xmlIsLoaded";				//variables for the xml		private var _xml:XML;		private var _offsetAmount:Number = 20;		private var url:String;		private var _xmlLoadCounter:uint;		private var loader:URLLoader = new URLLoader();		private var _headlines:Array = new Array();		private var _xmlLoadedStatus:Boolean = false;						//constructor		public function Newswire(APIKEY:String) {			url = "http://api.nytimes.com/svc/news/v2/all/last24hours.xml?offset=20&api-key=" + APIKEY;					}				public function load():void {			loader.load(new URLRequest(url));			loader.addEventListener(Event.COMPLETE, _onXMLLoaded, false, 0, true);			loader.addEventListener(IOErrorEvent.IO_ERROR, _onIOErrorEvent, false, 0, true);		}				//xml loaded		public function _onXMLLoaded($e:Event):void {			_xml = new XML($e.target.data);			//trace(_xml);			parseXML();			$e.target.removeEventListener(Event.COMPLETE, _onXMLLoaded);		}				//on IO error		public function _onIOErrorEvent($e:IOErrorEvent):void {			trace("loaded");			_xml = new XML($e.target.data);			//trace(_xml);			parseXML();			$e.target.removeEventListener(Event.COMPLETE, _onIOErrorEvent);		}				//parse xml		public function parseXML() {			//trace(_xml.results.news_item.headline);			var headlineList:XMLList = _xml.results.news_item.headline;			for each (var tempXML:XML in headlineList) {                _headlines.push(tempXML);            }			//_xmlLoadedStatus = true;			dispatchEvent( new Event(LOADED) );		}				//getter		public function get getHeadlines():Array {			return _headlines;		}			}}