package com.NickHardeman.utils {		public class MathUtils {				public function MathUtils() {					}				// returns a number between 0.0 and 1.0		public static function normalize(value:Number, low:Number, high:Number):Number {			return value/(high + low);		}				// value should always be between 0.0 - 1.0. Places value into desired range of low - high		public static function lerp(value:Number, low:Number, high:Number):Number {			return value * (high - low) + low;		}				// convert the value parameter from range low1 to high1 to the range low2 to high2		public static function map(value:Number, low1:Number, high1:Number, low2:Number, high2:Number):Number {			return normalize(value, low1, high1) * (high2 - low2) + low2;		}				public static function randomRange($min:Number, $max:Number=Number.POSITIVE_INFINITY):Number {			if( $max == Number.POSITIVE_INFINITY) {$max = $min; $min = 0;}			return Math.random() * ($max - $min) + $min;		}				// convert radians to degrees		public static function toDegrees(radians:Number):Number {			return radians * 180/Math.PI;		}				// convert degrees to radians //		public static function toRadians(degrees:Number):Number {			return degrees * Math.PI / 180;		}	}}